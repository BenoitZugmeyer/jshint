#!/bin/bash

# exit on first error
set -e

REPOS=$(realpath "$1")
TXN="$2"

SVNLOOK="/usr/bin/svnlook"
JSHINT="/usr/bin/jshint"
TMPDIR=$(mktemp -d)

trap "rm -rf $TMPDIR" EXIT


cd "$TMPDIR"

_svnlook () {
    local cmd="$1"
    shift
    $SVNLOOK "$cmd" -t "$TXN" "$REPOS" "$@"
}

list_changed_files () {
    _svnlook changed | awk '/^[UA]/ { print $2 }'
}

is_file () {
    local path="$1"

    # All paths ending with a slash are directories
    if [[ "$path" =~ /$ ]]; then
        return 1
    fi

    proplist=$(_svnlook proplist "$path" 2> /dev/null)

    # If the command failed, this is not a file. If it contains svn:special,
    # this is a symlink.
    if [[ $? -eq 1 ]] || [[ $proplist =~ svn:special ]]; then
        return 1
    fi

    return 0
}

cp_file () {
    local path=$1
    mkdir -p $(dirname "$path")
    _svnlook cat "$path" > "$path"
}

cp_parent_file () {
    local path="$1"
    local filename="$2"

    while ! [[ "$path" =~ ^\.?/?$ ]]; do
        path=$(dirname $path)
        fullpath="$path/$filename"
        if is_file "$fullpath"; then
            cp_file "$fullpath"
            return 0
        fi
    done
    return 1
}

# Iterate over all changed files
while read file; do

    # Ignore symlinks and directoryes
    ! is_file "$file" && continue

    # Ignore non js or html files
    ! [[ "$file" =~ \.(js|html|xhtml|htm)$ ]] && continue

    # Ignore the file if it doesn't have a .jshintrc in a parent folder
    ! cp_parent_file "$file" .jshintrc && continue

    cp_file "$file"
    cp_parent_file "$file" .jshintignore || true

done < <(list_changed_files)

# jshint only reads the first .jshintignore it finds in the current directory. Aggregate all
# .jshintignore we find into a root .jshintignore, and make paths relative to the root path
while read ignorefile; do
    dir=$(dirname "$ignorefile")
    gawk 'match($0, /^(!?)(\S+)/, a) { print a[1] "'$dir'/" a[2] }' "$ignorefile"
done < <(find -mindepth 2 -type f -name .jshintignore) >> .jshintignore

# Run jshint
HOME="$TMPDIR" $JSHINT -e 'js,html,xhtml,htm' --extract auto . 1>&2
